#工作流名称
name: weread data sync

#工作流触发条件
on:
  #允许手动触发
  workflow_dispatch:
  #允许corn定时触发
  schedule:
    - cron: "0 0 * * *"

#工作流并发控制
concurrency:
  #定义并发分组
  group: ${{ github.workflow }}-${{ github.ref }}
  #如果有相同并发组的工作流正在运行，取消正在运行的工作流，确保同一时间只有一个工作流实例在运行。
  cancel-in-progress: true

#定义工作流中的内容
jobs:
  #作业id
  sync:
    #作业名称
    name: Sync
    #作业环境，使用最新版ubuntu系统
    runs-on: ubuntu-latest
    #定义作业时的变量，是从从github的仓库中获取变量，secrets表示密钥，vars表示变量
    env:
      WEREAD_COOKIE: ${{ secrets.WEREAD_COOKIE }}

      #下面这两个其实是配置在github仓库的环境变量，用于创建用户名和id，但在目前的项目中其实不需要配置也可以实现，因为直接写入了cook
      CC_URL: ${{ secrets.CC_URL }}
      CC_ID: ${{ secrets.CC_ID }}
      CC_PASSWORD: ${{ secrets.CC_PASSWORD }}

      #BOOK_DATABASE_NAME: ${{ vars.BOOK_DATABASE_NAME }}

      REF: ${{ github.ref }}
      REPOSITORY: ${{ github.repository }}
    steps:
      #将仓库代码拉取到运行环境中。
      - name: Checkout
        uses: actions/checkout@v4
      #设置 Python 环境，指定 Python 版本为 3.11
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      #安装项目所需的依赖，包括升级 pip 并安装 requirements.txt 中列出的依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      #执行项目中weread.py文件，这个命令是定义在setup文件中的，再指向项目中的具体py文件
      - name: weread sync
        run: |
          weread
      